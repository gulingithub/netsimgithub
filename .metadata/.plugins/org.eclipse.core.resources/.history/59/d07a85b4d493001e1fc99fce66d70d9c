import java.awt.BorderLayout;
import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.SwingUtilities;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
public class MainFrame extends javax.swing.JFrame {
	private JMenuBar jMenuBar;
    private JMenu fileMenu, editMenu, helpMenu;
    private JMenuItem jMenuItem1, jMenuItem2, jMenuItem3;
    private JLabel jLabel;

	/**
	* Auto-generated main method to display this JFrame
	*/
	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				MainFrame inst = new MainFrame();
				inst.setLocationRelativeTo(null);
				inst.setVisible(true);
			}
		});
	}
	
	public MainFrame() {
		super();
		initGUI();
	}
	
	private void initGUI() {
		try {
			//BorderLayout thisLayout = new BorderLayout();
			//getContentPane().setLayout(thisLayout);
			setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
			{
				ImageIcon iconNode = new ImageIcon(getClass().getResource("icons/app.png"), "");
				jLabel = new JLabel("Image and Text", iconNode, JLabel.CENTER);
				getContentPane().add(jLabel, BorderLayout.CENTER);
			}
			{
				jMenuBar = new JMenuBar();
				setJMenuBar(jMenuBar);
				{
		            fileMenu = new JMenu();
		            jMenuBar.add(fileMenu);
		            fileMenu.setText("File");
		            fileMenu.setName("fileMenu");
		            {
		                jMenuItem1 = new JMenuItem();
		                fileMenu.add(jMenuItem1);
		                jMenuItem1.setText("New");
		                //jMenuItem1.setAction(getAppActionMap().get("new"));
		            
		                jMenuItem2 = new JMenuItem();
		                fileMenu.add(jMenuItem2);
		                jMenuItem2.setText("Quit");
		                //jMenuItem2.setAction(getAppActionMap().get("quit"));
		            }		            
		            
		            editMenu = new JMenu();
		            jMenuBar.add(editMenu);
		            editMenu.setText("Edit");
		            editMenu.setName("editMenu");
		            
		            helpMenu = new JMenu();
		            jMenuBar.add(helpMenu);
		            helpMenu.setText("Help");
		            helpMenu.setName("helpMenu");
		            {
		                jMenuItem3 = new JMenuItem();
		                helpMenu.add(jMenuItem3);
		                jMenuItem3.setText("About");		                
		                //jMenuItem3.setAction(getAppActionMap().get("about"));
		            }									
				}
			}
			//pack();
			setSize(800, 600);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
