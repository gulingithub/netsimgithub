

On Sun, Aug 30, 2009 at 12:37 AM, Fernan A Pedraza <fap8c@virginia.edu> wrote:

	/*
	 * NetSimView.java
	 */

	package netsim;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;

import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.*;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.util.*;

/**
 * The application's main frame.
 */
public class NetSimView extends FrameView {

	private HashMap nodesMap = new HashMap();
	private ArrayList<Component> selectedComponents = new ArrayList<Component>();
	private int numNodes = 1;
	private int initMousePosX, initMousePosY;
	private boolean startDrag = false;

	//private SortedSet<int, JLabel> nodes = new TreeSet<int, JLabel>();
	//public ArrayList<<JLabel>, <JLabel>> nodes = new ArrayList<JLabel, JLabel>();
	//public Collection<JLabel, int> nodeCollection = new Collection

	public NetSimView(SingleFrameApplication app) {
		super(app);

		initComponents();

		// status bar initialization - message timeout, idle icon and busy animation, etc
		ResourceMap resourceMap = getResourceMap();
		int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
		messageTimer = new Timer(messageTimeout, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				statusMessageLabel.setText("");
			}
		});
		messageTimer.setRepeats(false);
		int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
		for (int i = 0; i < busyIcons.length; i++) {
			busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
		}
		busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
				statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
			}
		});
		idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
		statusAnimationLabel.setIcon(idleIcon);
		progressBar.setVisible(false);

		// connecting action tasks to status bar via TaskMonitor
		TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
		taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
			public void propertyChange(java.beans.PropertyChangeEvent evt) {
				String propertyName = evt.getPropertyName();
				if ("started".equals(propertyName)) {
					if (!busyIconTimer.isRunning()) {
						statusAnimationLabel.setIcon(busyIcons[0]);
						busyIconIndex = 0;
						busyIconTimer.start();
					}
					progressBar.setVisible(true);
					progressBar.setIndeterminate(true);
				} else if ("done".equals(propertyName)) {
					busyIconTimer.stop();
					statusAnimationLabel.setIcon(idleIcon);
					progressBar.setVisible(false);
					progressBar.setValue(0);
				} else if ("message".equals(propertyName)) {
					String text = (String)(evt.getNewValue());
					statusMessageLabel.setText((text == null) ? "" : text);
					messageTimer.restart();
				} else if ("progress".equals(propertyName)) {
					int value = (Integer)(evt.getNewValue());
					progressBar.setVisible(true);
					progressBar.setIndeterminate(false);
					progressBar.setValue(value);
				}
			}
		});
	}

	@Action
	public void showAboutBox() {
		if (aboutBox == null) {
			JFrame mainFrame = NetSimApp.getApplication().getMainFrame();
			aboutBox = new NetSimAboutBox(mainFrame);
			aboutBox.setLocationRelativeTo(mainFrame);
		}
		NetSimApp.getApplication().show(aboutBox);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		mainPanel = new javax.swing.JPanel();
		jSplitPane1 = new javax.swing.JSplitPane();
		jTabbedPane2 = new javax.swing.JTabbedPane();
		jPanel2 = new javax.swing.JPanel();
		canvas1 = new java.awt.Canvas();
		jPanel3 = new javax.swing.JPanel();
		jTabbedPane1 = new javax.swing.JTabbedPane();
		jPanel4 = new javax.swing.JPanel();
		nodeBtn = new javax.swing.JToggleButton();
		appBtn = new javax.swing.JToggleButton();
		transBtn = new javax.swing.JToggleButton();
		selectBtn = new javax.swing.JToggleButton();
		jPanel5 = new javax.swing.JPanel();
		rightPane = new javax.swing.JPanel();
		menuBar = new javax.swing.JMenuBar();
		javax.swing.JMenu fileMenu = new javax.swing.JMenu();
		javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
		javax.swing.JMenu helpMenu = new javax.swing.JMenu();
		javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
		statusPanel = new javax.swing.JPanel();
		javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
		statusMessageLabel = new javax.swing.JLabel();
		statusAnimationLabel = new javax.swing.JLabel();
		progressBar = new javax.swing.JProgressBar();

		mainPanel.setName("mainPanel"); // NOI18N

		jSplitPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
		jSplitPane1.setDividerLocation(200);
		jSplitPane1.setDividerSize(4);
		jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
		jSplitPane1.setEnabled(false);
		jSplitPane1.setName("jSplitPane1"); // NOI18N

		jTabbedPane2.setName("jTabbedPane2"); // NOI18N

		jPanel2.setName("jPanel2"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(netsim.NetSimApp.class).getContext().getResourceMap(NetSimView.class);
		canvas1.setBackground(resourceMap.getColor("canvas1.background")); // NOI18N
		canvas1.setName("canvas1"); // NOI18N

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(37, Short.MAX_VALUE))
		);
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addGap(27, 27, 27)
						.addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(22, Short.MAX_VALUE))
		);

		jTabbedPane2.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

		jPanel3.setName("jPanel3"); // NOI18N

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 239, Short.MAX_VALUE)
		);
		jPanel3Layout.setVerticalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 132, Short.MAX_VALUE)
		);

		jTabbedPane2.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

		jSplitPane1.setRightComponent(jTabbedPane2);

		jTabbedPane1.setName("jTabbedPane1"); // NOI18N

		jPanel4.setName("jPanel4"); // NOI18N

		nodeBtn.setIcon(resourceMap.getIcon("nodeBtn.icon")); // NOI18N
		nodeBtn.setText(resourceMap.getString("nodeBtn.text")); // NOI18N
		nodeBtn.setName("nodeBtn"); // NOI18N
		nodeBtn.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				iconStateChanged(evt);
			}
		});

		appBtn.setIcon(resourceMap.getIcon("appBtn.icon")); // NOI18N
		appBtn.setText(resourceMap.getString("appBtn.text")); // NOI18N
		appBtn.setName("appBtn"); // NOI18N
		appBtn.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				iconStateChanged(evt);
			}
		});

		transBtn.setIcon(resourceMap.getIcon("transBtn.icon")); // NOI18N
		transBtn.setText(resourceMap.getString("transBtn.text")); // NOI18N
		transBtn.setName("transBtn"); // NOI18N
		transBtn.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				iconStateChanged(evt);
			}
		});

		selectBtn.setText(resourceMap.getString("selectBtn.text")); // NOI18N
		selectBtn.setName("selectBtn"); // NOI18N
		selectBtn.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				iconStateChanged(evt);
			}
		});
		selectBtn.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				rightPaneKeyPressed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(
				jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel4Layout.createSequentialGroup()
										.addComponent(nodeBtn)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(appBtn))
										.addGroup(jPanel4Layout.createSequentialGroup()
												.addComponent(transBtn)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(selectBtn)))
												.addContainerGap(15, Short.MAX_VALUE))
		);
		jPanel4Layout.setVerticalGroup(
				jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(nodeBtn)
								.addComponent(appBtn))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(transBtn)
										.addComponent(selectBtn))
										.addContainerGap())
		);

		jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

		jPanel5.setName("jPanel5"); // NOI18N

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
		jPanel5.setLayout(jPanel5Layout);
		jPanel5Layout.setHorizontalGroup(
				jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 239, Short.MAX_VALUE)
		);
		jPanel5Layout.setVerticalGroup(
				jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 162, Short.MAX_VALUE)
		);

		jTabbedPane1.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

		jSplitPane1.setLeftComponent(jTabbedPane1);

		rightPane.setBackground(resourceMap.getColor("rightPane.background")); // NOI18N
		rightPane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
		rightPane.setName("rightPane"); // NOI18N
		rightPane.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				rightPaneClicked(evt);
			}
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				rightPaneMouseReleased(evt);
			}
		});
		rightPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(java.awt.event.MouseEvent evt) {
				rightPaneMouseDragged(evt);
			}
		});

		javax.swing.GroupLayout rightPaneLayout = new javax.swing.GroupLayout(rightPane);
		rightPane.setLayout(rightPaneLayout);
		rightPaneLayout.setHorizontalGroup(
				rightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 445, Short.MAX_VALUE)
		);
		rightPaneLayout.setVerticalGroup(
				rightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 362, Short.MAX_VALUE)
		);

		javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
		mainPanel.setLayout(mainPanelLayout);
		mainPanelLayout.setHorizontalGroup(
				mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(mainPanelLayout.createSequentialGroup()
						.addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(rightPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap())
		);
		mainPanelLayout.setVerticalGroup(
				mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
						.addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(rightPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
								.addContainerGap())
		);

		menuBar.setName("menuBar"); // NOI18N

		fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
		fileMenu.setName("fileMenu"); // NOI18N

		javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(netsim.NetSimApp.class).getContext().getActionMap(NetSimView.class, this);
		exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
		exitMenuItem.setName("exitMenuItem"); // NOI18N
		fileMenu.add(exitMenuItem);

		menuBar.add(fileMenu);

		helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
		helpMenu.setName("helpMenu"); // NOI18N

		aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
		aboutMenuItem.setName("aboutMenuItem"); // NOI18N
		helpMenu.add(aboutMenuItem);

		menuBar.add(helpMenu);

		statusPanel.setName("statusPanel"); // NOI18N

		statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

		statusMessageLabel.setName("statusMessageLabel"); // NOI18N

		statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

		progressBar.setName("progressBar"); // NOI18N

		javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
		statusPanel.setLayout(statusPanelLayout);
		statusPanelLayout.setHorizontalGroup(
				statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
				.addGroup(statusPanelLayout.createSequentialGroup()
						.addContainerGap()
						.addComponent(statusMessageLabel)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 548, Short.MAX_VALUE)
						.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(statusAnimationLabel)
						.addContainerGap())
		);
		statusPanelLayout.setVerticalGroup(
				statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(statusPanelLayout.createSequentialGroup()
						.addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(statusMessageLabel)
								.addComponent(statusAnimationLabel)
								.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(3, 3, 3))
		);

		setComponent(mainPanel);
		setMenuBar(menuBar);
		setStatusBar(statusPanel);
	}// </editor-fold>

	private void rightPaneClicked(java.awt.event.MouseEvent evt) {                                 
		String iconFile = null;
		String iconName = null;       
		int posX = evt.getX();
		int posY = evt.getY();


		if (this.nodeBtn.isSelected()) {
			iconFile = "/home/fap/Documents/NetBeansProjects/NetSim/figures/node.png";
			iconName = "Node";
		}
		else if (this.appBtn.isSelected()) {
			iconFile = "/home/fap/Documents/NetBeansProjects/NetSim/figures/app.png";
			iconName = "App";
		}
		else if (this.transBtn.isSelected()) {
			iconFile = "/home/fap/Documents/NetBeansProjects/NetSim/figures/trans.png";
			iconName = "Trans";
		}


		if (iconFile != null)
		{
			posX = posX-15;
			posY = posY-20;
			int h =30;
			int w = 60;

			ImageIcon iconNode = new ImageIcon(iconFile);

			Image img = iconNode.getImage();
			Image newimg = img.getScaledInstance(15, 15,  java.awt.Image.SCALE_SMOOTH);
			ImageIcon newIcon = new ImageIcon(newimg);

			JLabel nodeIcon = new JLabel(iconName, newIcon, JLabel.CENTER);
			nodeIcon.setSize(w, h);
			nodeIcon.setText(iconName);
			/* nodeIcon.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent evt) {
                        iconClicked(evt);
                    }
                });*/

			this.nodesMap.put(new Integer(numNodes), nodeIcon);
			numNodes++;

			//rightPane.add(nodeIcon, -1);

			//javax.swing.JButton nodeIcon = new javax.swing.JButton("node", iconNode);

			//jButton1.setText("jButton1.text"); // NOI18N
			//jButton1.setName("jButton1"); // NOI18N

			javax.swing.GroupLayout rightPaneLayout = new javax.swing.GroupLayout(rightPane);
			rightPane.setLayout(rightPaneLayout);
			rightPaneLayout.setHorizontalGroup(
					rightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(rightPaneLayout.createSequentialGroup()
							.addGap(posX, posX, posX)
							.addComponent(nodeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, w, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addContainerGap(w, Short.MAX_VALUE))
			);
			rightPaneLayout.setVerticalGroup(
					rightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(rightPaneLayout.createSequentialGroup()
							.addGap(posY, posY, posY)
							.addComponent(nodeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, h, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addContainerGap(h, Short.MAX_VALUE))
			);
		}
		else if (selectBtn.isSelected()) {
			Component iconComp = rightPane.getComponentAt(posX, posY);
			if (!iconComp.equals(rightPane)) {
				if (!evt.isControlDown()){
					for (Object comp : selectedComponents) {
						((Component) comp).setForeground(java.awt.Color.BLACK);
					}
					selectedComponents.clear();
					iconComp.setForeground(java.awt.Color.BLUE);
					selectedComponents.add(iconComp);
				}
				else {
					if (selectedComponents.contains(iconComp)) {
						iconComp.setForeground(java.awt.Color.BLACK);
						selectedComponents.remove(iconComp);
					}
					else {
						iconComp.setForeground(java.awt.Color.BLUE);
						selectedComponents.add(iconComp);
					}
				}
			}
			else {
				for (Object comp : selectedComponents) {
					((Component) comp).setForeground(java.awt.Color.BLACK);
				}
				selectedComponents.clear();
			}

			//rightPane.remove( rightPane.getComponentAt(posX, posY) );

		}

		rightPane.repaint();

	}                                

	private void rightPaneKeyPressed(java.awt.event.KeyEvent evt) {
		//System.out.println("AJA....!!!");
		//System.out.println(evt.getKeyCode());
		//System.out.println(KeyEvent.VK_DELETE);
		if ( evt.getKeyCode() == KeyEvent.VK_DELETE) {
			//System.out.println("Gotcha!!!");
			for (Object comp : selectedComponents) {
				rightPane.remove((Component) comp);
			}
			rightPane.repaint();
		}
	}

	private void iconStateChanged(java.awt.event.ItemEvent evt) {
		if (evt.getStateChange() == ItemEvent.SELECTED) {
			if (!evt.getItem().equals(nodeBtn))
				nodeBtn.setSelected(false);
			if (!evt.getItem().equals(appBtn))
				appBtn.setSelected(false);
			if (!evt.getItem().equals(transBtn))
				transBtn.setSelected(false);
			if (!evt.getItem().equals(selectBtn))
				selectBtn.setSelected(false);
		}
	}

	private void rightPaneMouseDragged(java.awt.event.MouseEvent evt) {

		if (selectBtn.isSelected()) {
			Component iconComp = rightPane.getComponentAt(evt.getX(), evt.getY());
			if (!startDrag) {
				initMousePosX = evt.getX();
				initMousePosY = evt.getY();
				//System.out.println(selectedComponents.toString());
				if (!selectedComponents.contains(iconComp) && !evt.isControlDown()) {
					for (Object comp : selectedComponents)
						((Component) comp).setForeground(java.awt.Color.BLACK);
					selectedComponents.clear();
					if (!iconComp.equals(rightPane)) {
						iconComp.setForeground(java.awt.Color.BLUE);
						selectedComponents.add(iconComp);
					}
				}

				//System.out.println("HERE...");
				startDrag = true;
			}
			int deltaX = evt.getX() - initMousePosX;
			int deltaY = evt.getY() - initMousePosY;

			if (!selectedComponents.isEmpty() && !evt.isControlDown()) {
				deltaX = evt.getX() - initMousePosX;
				deltaY = evt.getY() - initMousePosY;
				for (Object comp : selectedComponents) {
					int X = ((Component) comp).getX() + deltaX;
					int Y = ((Component) comp).getY() + deltaY;
					((Component) comp).setLocation(X, Y);
				}
				initMousePosX = evt.getX();
				initMousePosY = evt.getY();
			}
			else {
				Graphics g = rightPane.getGraphics();
				g.drawRect(Math.min(initMousePosX, evt.getX()), Math.min(initMousePosY, evt.getY()),
						Math.abs(initMousePosX - evt.getX()), Math.abs(initMousePosY - evt.getY()));

				//((Component) comp).setForeground(java.awt.Color.BLACK);

				rightPane.repaint();
			}
		}



	}

	private void rightPaneMouseReleased(java.awt.event.MouseEvent evt) {
		if (startDrag == true && selectBtn.isSelected()) {
			for (Object comp : rightPane.getComponents()) {
				int posX = ((Component) comp).getX();
				int posY = ((Component) comp).getY();
				int minX = Math.min(initMousePosX, evt.getX());
				int minY = Math.min(initMousePosY, evt.getY());
				int maxX = Math.max(initMousePosX, evt.getX());
				int maxY = Math.max(initMousePosY, evt.getY());
				if (posX >= minX && posX <= maxX && posY >= minY && posY <= maxY) {
					if (selectedComponents.contains((Component) comp)) {
						((Component) comp).setForeground(java.awt.Color.BLACK);
						selectedComponents.remove(((Component) comp));
					}
					else {
						((Component) comp).setForeground(java.awt.Color.BLUE);
						selectedComponents.add(((Component) comp));
					}
					//((Component) comp).setForeground(java.awt.Color.BLUE);
					//selectedComponents.add((Component) comp);
				}
			}
		}
		startDrag = false;
	}

	/*    public void paintComponent(Graphics g)
        {
            super.paintComponent(g);
            int height = getHeight();
            int width = getWidth();
            if (image !=null)
            {
                g.drawImage(image, 0,0, width, height, this);
            }
            else
            {
                g.setColor(Color.WHITE );
                g.fillRect(0, 0, width, height);
            }
        }

        public void drawRectangle(Rectangle r)
        {
            Graphics g = super.getGraphics();
            g.drawRect(r.x, r.y, r.width, r.height);
            repaint();
        }//*/



	// Variables declaration - do not modify
	private javax.swing.JToggleButton appBtn;
	private java.awt.Canvas canvas1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JSplitPane jSplitPane1;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JTabbedPane jTabbedPane2;
	private javax.swing.JPanel mainPanel;
	private javax.swing.JMenuBar menuBar;
	private javax.swing.JToggleButton nodeBtn;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JPanel rightPane;
	private javax.swing.JToggleButton selectBtn;
	private javax.swing.JLabel statusAnimationLabel;
	private javax.swing.JLabel statusMessageLabel;
	private javax.swing.JPanel statusPanel;
	private javax.swing.JToggleButton transBtn;
	// End of variables declaration

	private final Timer messageTimer;
	private final Timer busyIconTimer;
	private final Icon idleIcon;
	private final Icon[] busyIcons = new Icon[15];
	private int busyIconIndex = 0;

	private JDialog aboutBox;
}


